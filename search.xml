<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
    
    <entry>
      <title><![CDATA[爆速Phalconの環境をBerkshelfで爆速インストール]]></title>
      <url>http://boblog.ima0123.com/2015/10/14/cifqur0sr000e7fmltnydeo3w/</url>
      <content type="html"><![CDATA[<p>前回Chef-soloのcookbookを手動でgit cloneする形でインストールしていたのですが<br>Berkshelfを使うとその手間も省けて、より爆速に環境がインストールできますね。</p>
<p>今回はまっさらなvagrantが既に<code>vagrant up</code>されている状態という前提から<br>説明をスタートします。</p>
<h3 id="Chefリポジトリの作成">Chefリポジトリの作成</h3><p>まずはChefリポジトリを作成します。</p>
<pre><code><span class="title">knife</span> solo init ./chef-repository
</code></pre><p>作成されたフォルダの中に<code>Berksfile</code>というファイルができているので編集します。</p>
<pre><code><span class="label">cd</span> chef-repository
<span class="label">vi</span> <span class="keyword">Berksfile </span>

// 以下を追記します
# cookbook <span class="string">"phalcon"</span>, git: <span class="string">"https://github.com/aiMatz/cookbook-phalcon.git"</span>, <span class="keyword">branch: </span><span class="string">"master"</span>
</code></pre><h3 id="Berkshelfでcookbookをダウンロード">Berkshelfでcookbookをダウンロード</h3><p>Berksfileと同じディレクトリで以下のコマンドを実行します。</p>
<pre><code><span class="keyword">berks </span>vendor
</code></pre><p>すると、berks-cookbooksというフォルダが作成され、その中にphalconフォルダが作成されます。<br>この中身は、githubからダウンロードしたcookbookになるわけですね。</p>
<p>続けて、<code>node/vagrant.localhost</code>のrun_listに<code>recipe[phalcon]</code>を追加します。</p>
<h3 id="knife-soloの実行">knife-soloの実行</h3><p>現状、まだvagrantのBOXには<code>knife solo prepare vagrant</code>のコマンドを実行していないため<br>Chefがインストールされていない状態です。</p>
<p>Chefがインストールされていない状態でも実行するためには、</p>
<pre><code><span class="label">knife</span> solo <span class="keyword">bootstrap </span>vagrant 
</code></pre><p>を実行すると、一時的にChefのインストールとCookbookの実行を同時に行ってくれるので便利です。<br>ただ、再度<code>knife solo cook vagrant</code>をしようとすると、Chefがインストールされていないと怒られるので、<br>予め、<code>knife solo prepare vagrant</code>を実行しておくことをおすすめします。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Mac御用達のParallelsDesktopを使ってVagrantを起動する]]></title>
      <url>http://boblog.ima0123.com/2015/10/14/cifqur0so00087fmlpxgg9lcj/</url>
      <content type="html"><![CDATA[<h2 id="ParallelsDesktopとVirtualBoxの起動の両立ができない">ParallelsDesktopとVirtualBoxの起動の両立ができない</h2><p>僕はMacユーザーなのですが、WindowsPCを使う機会も少々あるので<br>ParallelsDesktopというソフトを使ってMacの上でWindows7を起動して使っています。</p>
<p>ParallelsDesktopを使っていて不便なのは<br>ParallelsDesktopを起動している状態でVagrant(VirtualBox)を起動をするとエラーが発生していまうことです。</p>
<p>今まではVagrant(VirtualBox)を使って起動していた仮想OSを全て停止して<br>ParallelsDesktopを起動したり、その逆もしかり、という状態で非常に不便。。</p>
<p>そこでVagrantをParallelsDesktop経由で起動するように設定しました。</p>
<h2 id="VagrantをVirtualBoxではなくParallelsDesktopで行う">VagrantをVirtualBoxではなくParallelsDesktopで行う</h2><p>WindowsをVirtualBoxで起動する方法やVirtualBoxとParallelsDesktopを共存させる方法なども検討しましたが<br>VirtualBoxを使っていたVagrantをParalellsDesktopに移動させることにしました。</p>
<h3 id="メリット">メリット</h3><ul>
<li><p>VirtualBoxがもういらない</p>
</li>
<li><p>Vagrantで起動したCentOSを起動した状態で、ParallelsDesktopでWindowsを起動できる</p>
</li>
</ul>
<h3 id="デメリット">デメリット</h3><ul>
<li>対応しているBoxが少ない<br>[<a href="https://vagrantcloud.com/search?provider=parallels" target="_blank" rel="external">https://vagrantcloud.com/search?provider=parallels</a>]<br>（古いバージョンのOSなどには対応していないようです）</li>
</ul>
<p>※ ほかにも何かあったら教えてください</p>
<h2 id="Vagrantの標準仮想化ソフトウェアをParallelsDesktopに変える">Vagrantの標準仮想化ソフトウェアをParallelsDesktopに変える</h2><p>Vagrantの標準で使用する仮想化ソフトウェアはVirtualBoxです。<br>標準の仮想化ソフトウェアをParallelsDesktopに変えるには以下の手順でできます。</p>
<h3 id="前提">前提</h3><ul>
<li><p>ParallelsDesktop10がインストールされている<br>(公式のページによるとParallelsDesktop8以上であればOK)</p>
</li>
<li><p>vagrantがすでに動作できる状態にある<br><code>vagrant -v</code>するとvagrantのバージョンが表示されること  </p>
</li>
</ul>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant -v  </span><br><span class="line">Vagrant <span class="number">1.6</span><span class="number">.5</span></span><br></pre></td></tr></table></figure>
<h3 id="手順">手順</h3><h4 id="VagrantPluginをインストール">VagrantPluginをインストール</h4><p>VagrantをParallelsDesktopに変えるVagrantのプラグインをインストールします。<br>Macのコマンドラインで以下のコマンドを実行します。<br>（ディレクトリはどこでもOK）</p>
<figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant plugin <span class="keyword">install</span> vagrant-parallels</span><br></pre></td></tr></table></figure>
<p>エラーが表示されずにSucessすればOK</p>
<h4 id="環境変数にデフォルトの起動仮想化ソフトを指定する">環境変数にデフォルトの起動仮想化ソフトを指定する</h4><p>bashrcやzshrcに以下を指定する</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">export</span> VAGRANT_DEFAULT_PROVIDER=parallels</span><br></pre></td></tr></table></figure>
<p>コマンドラインから<code>echo VAGRANT_DEFAULT_PROVIDER</code>して<code>parallels</code>が表示されればOK</p>
<h4 id="CentOS6-5をインストールする">CentOS6.5をインストールする</h4><p>Macのターミナルから以下のコマンドを実行します。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd ~/vagrant/centos-<span class="number">6.5</span> <span class="comment">// お好きなディレクトリでどうぞ</span></span><br><span class="line">vagrant init parallels/centos-<span class="number">6.5</span></span><br><span class="line">vagrant up</span><br></pre></td></tr></table></figure>
<p><code>default: Machine booted and ready!</code>と出れば正常に起動成功！</p>
<p>これでParallelsDesktopを使った起動ができました。<br>Enjoy Vagrant running on ParallelsDesktop!</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[VagrantのBoxをアップデートする]]></title>
      <url>http://boblog.ima0123.com/2015/10/14/cifqur0sf00017fmlbwe828y7/</url>
      <content type="html"><![CDATA[<p>ダウンロードしたVagrantのBoxに更新があれば、アップデートすることができます。</p>
<h2 id="Vagrantのアップデート">Vagrantのアップデート</h2><p>アップデートしたいBoxのVagrantfileがおいてあるディレクトリで、ターミナルから</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant <span class="keyword">box </span>update</span><br></pre></td></tr></table></figure>
<p>これだけ。<br>新しいBoxは古いBoxに上書きされるのではなく、別のBoxとして保存されます。</p>
<h2 id="Boxの一覧を表示する">Boxの一覧を表示する</h2><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant box <span class="type">list</span></span><br></pre></td></tr></table></figure>
<p>Boxの一覧を表示できます。<br>下記のparallelsはProvider、0.2.0や1.0.0はバージョンですね。</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">parallels/centos-<span class="number">6.5</span> (parallels, <span class="number">0.2</span><span class="number">.0</span>)</span><br><span class="line">parallels/centos-<span class="number">6.5</span> (parallels, <span class="number">1.0</span><span class="number">.0</span>)</span><br></pre></td></tr></table></figure>
<h2 id="古いBoxを削除する">古いBoxを削除する</h2><p>古いBoxを削除するには以下のコマンドを実行します。</p>
<figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant <span class="keyword">box </span>remove &#123;<span class="keyword">box_name&#125; </span>--provider &#123;PROVIDER_NAME&#125; --<span class="keyword">box-version </span>VERSION</span><br></pre></td></tr></table></figure>
<p>たとえば、上記のparallels/centos-6.5：バージョン0.20のBoxを削除するには</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ vagrant box remove parallels/centos-<span class="number">6.5</span>  --box-version <span class="number">0.2</span><span class="number">.0</span></span><br></pre></td></tr></table></figure>
<p>再度、<code>vagrant box list</code>するとバージョン0.2.0のBoxが削除できていることを確認できます。</p>
]]></content>
    </entry>
    
    <entry>
      <title><![CDATA[Phalconが評判になってきたから、動作環境構築のおさらいでもしようか]]></title>
      <url>http://boblog.ima0123.com/2015/10/10/cifqur0sy000q7fmlnpv2zpae/</url>
      <content type="html"><![CDATA[<p>Phalcon PHPを周囲でもちらほら聞くようになってきました。</p>
<p>いいですよね、Phalconは。</p>
<p>なんて言ったって処理速度が速いし省メモリなので、多くのトランザクションを捌きたいというニーズにぴったりとはまります。</p>
<p>AWSのmicroインスタンスでさえHello Worldのechoソースだけで200req/secは確保できます。</p>
<p>他のフレームワークと比較しても差は歴然。</p>
<p>PHPの開発のやりやすさと、処理性能を求めるならはっきりいって現段階でPhalcon以外の選択肢が見当たりません。</p>
<p>[<a href="https://docs.phalconphp.com/ja/latest/reference/benchmark/hello-world.html:title" target="_blank" rel="external">https://docs.phalconphp.com/ja/latest/reference/benchmark/hello-world.html:title</a>]</p>
<p>さて、Phalconもバージョン2がリリースされて、以前に残しておいた手順も古くなってきたので手順書2015 Ver.を公開しようと思います。</p>
<p>（手順書ってどうしても古くなってしまいますよね。。）</p>
<p>今回はローカル開発に構築簡単なVagrantfileを記載しておきます。</p>
<p>え？なんでシェル使ってんのって？<br>今時Ansibleだろっていう声が隣から聞こえてきてますが、男は黙ってシェルスクリプトだって教えられて育ったので仕方ありません。</p>
<p>（Ansibleも作ったから公開しますそのうちきっと）</p>
<p>そう、ぱっと見てわかると思いますが、Parallels Desktopです。VirtualBoxなんて使ってません。<br>肝はシェルの部分なので、boxやプロバイダの設定などは読み替えて使ってみてくださいね。</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"># -*- mode: ruby -*-</span><br><span class="line"># vi: <span class="keyword">set</span> ft=ruby :</span><br><span class="line"></span><br><span class="line"><span class="label">$script</span> = &lt;&lt;SCRIPT</span><br><span class="line">  yum <span class="keyword">update</span> -<span class="literal">y</span></span><br><span class="line">  rpm --import http:<span class="comment">//dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6</span></span><br><span class="line">  rpm -<span class="keyword">U</span> http:<span class="comment">//dl.iuscommunity.org/pub/ius/stable/CentOS/6/x86_64/epel-release-6-5.noarch.rpm</span></span><br><span class="line">  rpm --import http:<span class="comment">//mirror.its.dal.ca/ius/IUS-COMMUNITY-GPG-KEY</span></span><br><span class="line">  rpm -<span class="keyword">U</span> http:<span class="comment">//dl.iuscommunity.org/pub/ius/stable/CentOS/6/x86_64/ius-release-1.0-14.ius.centos6.noarch.rpm</span></span><br><span class="line">  rpm -<span class="keyword">U</span> http:<span class="comment">//nginx.org/packages/centos/6/noarch/RPMS/nginx-release-centos-6-0.el6.ngx.noarch.rpm</span></span><br><span class="line">  yum install -y git gcc make vim htop tree <span class="keyword">zip</span> unzip \</span><br><span class="line">  nginx redis30u \</span><br><span class="line">  pcre-devel php56u php56u-devel php56u-pdo php56u-mysql php56u-fpm php56u-pecl-redis</span><br><span class="line"></span><br><span class="line">  # Install Phalcon</span><br><span class="line">  <span class="keyword">if</span> [ ! -f /etc/php.<span class="keyword">d</span>/phalcon.ini ]; then</span><br><span class="line">    <span class="keyword">cd</span> /usr/<span class="keyword">local</span>/src</span><br><span class="line">    git clone --<span class="keyword">no</span>-<span class="keyword">local</span> git:<span class="comment">//github.com/phalcon/cphalcon.git</span></span><br><span class="line">    <span class="keyword">cd</span> cphalcon/build</span><br><span class="line">    ./install</span><br><span class="line">    echo <span class="string">"extension = phalcon.so"</span> &gt; /etc/php.<span class="keyword">d</span>/phalcon.ini</span><br><span class="line">  fi</span><br><span class="line"></span><br><span class="line">  service nginx start</span><br><span class="line">  service php-fpm start</span><br><span class="line">SCRIPT</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Vagrant.configure(<span class="string">"2"</span>) <span class="keyword">do</span> |config|</span><br><span class="line">  config.vm.hostname = <span class="string">"phalcon-service"</span></span><br><span class="line">  config.vm.box = <span class="string">"parallels/centos-6.6"</span></span><br><span class="line"></span><br><span class="line">  config.vm.box_check_update = true</span><br><span class="line"></span><br><span class="line">  config.vm.provision <span class="string">"shell"</span>, inline: <span class="label">$script</span></span><br><span class="line"></span><br><span class="line">  config.vm.provider <span class="string">"parallels"</span> <span class="keyword">do</span> |v|</span><br><span class="line">    v.update_guest_tools = true</span><br><span class="line">    v.optimize_power_consumption = true</span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure>]]></content>
    </entry>
    
  
  
</search>
